<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.user.GoodsMapper">
  <resultMap id="BaseResultMap" type="entity.user.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="ex_number" jdbcType="INTEGER" property="exNumber" />
    <result column="sa_number" jdbcType="INTEGER" property="saNumber" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    good_id, createtime, detail, pic, price, size, ex_number, sa_number, type, good_name
  </sql>
  <select id="selectByExample" parameterType="entity.user.GoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from l_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from l_goods
    where good_id = #{goodId,jdbcType=INTEGER}
  </select>

  <!--根据goodsname查询-->


  <select id="selectByGoodsName" parameterType="String" resultType="Integer" >
           select  good_id from l_goods where good_name =#{goodName}
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from l_goods
    where good_id = #{goodId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.user.GoodsExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from l_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.user.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into l_goods (good_id, createtime, detail, 
      pic, price, size, ex_number,
      sa_number, type, good_name
      )
    values (#{goodId,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{detail,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{size,jdbcType=INTEGER}, #{exNumber,jdbcType=INTEGER}, 
      #{saNumber,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{goodName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.user.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into l_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodId != null">
        good_id,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="exNumber != null">
        ex_number,
      </if>
      <if test="saNumber != null">
        sa_number,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="exNumber != null">
        #{exNumber,jdbcType=INTEGER},
      </if>
      <if test="saNumber != null">
        #{saNumber,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.user.GoodsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from l_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update l_goods
    <set>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.exNumber != null">
        ex_number = #{record.exNumber,jdbcType=INTEGER},
      </if>
      <if test="record.saNumber != null">
        sa_number = #{record.saNumber,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.goodName != null">
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update l_goods
    set good_id = #{record.goodId,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      detail = #{record.detail,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      size = #{record.size,jdbcType=INTEGER},
      ex_number = #{record.exNumber,jdbcType=INTEGER},
      sa_number = #{record.saNumber,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      good_name = #{record.goodName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.user.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update l_goods
    <set>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="exNumber != null">
        ex_number = #{exNumber,jdbcType=INTEGER},
      </if>
      <if test="saNumber != null">
        sa_number = #{saNumber,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
    </set>
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.user.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update l_goods
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      detail = #{detail,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      size = #{size,jdbcType=INTEGER},
      ex_number = #{exNumber,jdbcType=INTEGER},
      sa_number = #{saNumber,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      good_name = #{goodName,jdbcType=VARCHAR}
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
</mapper>