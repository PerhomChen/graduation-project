<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>


  <display-name>Archetype Created Web Application</display-name>



  <!--加载spring容器-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <!--增加一个过滤器,解决中文乱码问题-->
  <filter>
    <filter-name>encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!-- post乱码过滤器 -->
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--springMVC前端控制器-->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--contextConfigLocation配置springMVC加载的配置文件（配置处理器映射器、适配器等等）-->
    <!--如果不配置默认加载web-inf/servlet名称-servlet.xml-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:SpringMVC.xml</param-value>
    </init-param>
   <!-- <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>-->
  </servlet>

  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>

    <!--
      第一种：*.action结尾的有DispatcherServlet进行解析
      第二种：/,访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析
      使用此种方法可以实现RESful风格的url
      第三种：/*:这样的配置不对，最终要转发到一个jsp页面，仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到
      handler，会报错
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>
